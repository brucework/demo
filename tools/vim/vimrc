set nu                                  " 显示行号
set syntax=on                           " 语法高亮
set ruler                               " 显示标尺
set showcmd                             " 输入的命令显示出来。
set cmdheight=1                         " 命令行的高度设置为1
set laststatus=2                        " 启动显示状态行(1),总是显示状态行(2) 
"set foldenable                          " 允许折叠 
set foldmethod=manual                   " 手动折叠 
"set background=dark                     " 背景使用黑色
set nocompatible                        " 去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限 

" 显示中文帮助
if version >= 603
    set helplang=cn
    set encoding=utf-8
endif

" 设置配色方案
"colorscheme default                     " default blue darkbblue murphy

" 映射全选+复制 ctrl+a
map <C-A> ggVGY 
map! <C-A> <Esc>ggVGY
map <F12> gg=G

" 选中状态下 Ctrl+c 复制
vmap <C-c> "+y

" 去空行 
nnoremap <F2> :g/^\s*$/d<CR>

" 比较文件 
nnoremap <C-F2> :vert diffsplit 

set completeopt=preview,menu            " 代码补全
set clipboard+=unnamed                  " 共享剪贴板
set autowrite                           " 自动保存
set magic                               " 设置魔术
set guioptions-=T                       " 隐藏工具栏
set guioptions-=m                       " 隐藏菜单栏

"set statusline=\ %<%F[%1*%M%*%n%R%H]%=\ TYPE=%y\ %0([FORMAT=%{&fileformat}\ %{&encoding}]\ %c:%l/%L%)\    " 设置在状态行显示的信息
set statusline=\ %<%F[%1*%M%*%n%R%H]\ [TYPE=%Y]\ %0([FORMAT=%{&fileformat}\ %{&encoding}]\ [COL=%c,ROW=%l:%p%%/%L]%)\    " 设置在状态行显示的信息

set foldcolumn=0
"set foldmethod=indent
set foldlevel=3 
set foldenable                          " 开始折叠
set autoindent                          " 自动缩进
set hlsearch                            " 搜索字符高亮
set smartindent                         " 自动缩进
set tabstop=4                           " Tab 键的宽度
set softtabstop=4                       " 统一缩进为4
set shiftwidth=4

set expandtab							" 用空格代替制表符
"set noexpandtab							" 不用空格代替制表符
set nobackup                            " 禁止生成临时文件
set noswapfile 
set nocompatible
set mouse=a                             " 支持鼠标功能
set cursorline                          " 突出显示当前行
set showmatch                           " 高亮显示匹配的括号

" Add Tlist
nnoremap <silent> <F8> :TlistToggle<CR>

" set cscope config
if has("cscope")
    set csprg=/usr/bin/cscope
    set csto=0
    set cst
    set nocsverb
" add any database in current directory
    if filereadable("cscope.out")
        cs add cscope.out
" else add database pointed to by environment
    elseif $CSCOPE_DB != ""
        cs add $CSCOPE_DB
    endif
    set csverb
endif

nmap <C-_>s :cs find s <C-R>=expand("<cword>")<CR><CR>
nmap <C-_>g :cs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-_>c :cs find c <C-R>=expand("<cword>")<CR><CR>
nmap <C-_>t :cs find t <C-R>=expand("<cword>")<CR><CR>
nmap <C-_>e :cs find e <C-R>=expand("<cword>")<CR><CR>
nmap <C-_>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
nmap <C-_>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <C-_>d :cs find d <C-R>=expand("<cword>")<CR><CR>

" Using 'CTRL-spacebar' then a search type makes the vim window
" split horizontally, with search result displayed in
" the new window.

nmap <C-Space>s :scs find s <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space>g :scs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space>c :scs find c <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space>t :scs find t <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space>e :scs find e <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space>f :scs find f <C-R>=expand("<cfile>")<CR><CR>
nmap <C-Space>i :scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <C-Space>d :scs find d <C-R>=expand("<cword>")<CR><CR>

" Hitting CTRL-space *twice* before the search type does a vertical
" split instead of a horizontal one

nmap <C-Space><C-Space>s
	\:vert scs find s <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space><C-Space>g
	\:vert scs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space><C-Space>c
	\:vert scs find c <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space><C-Space>t
	\:vert scs find t <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space><C-Space>e
	\:vert scs find e <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space><C-Space>i
	\:vert scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <C-Space><C-Space>d
	\:vert scs find d <C-R>=expand("<cword>")<CR><CR>

" Config tags
set tags=./tags
" set autochdir

function! InsertStatuslineColor(mode)
    if a:mode == 'i'
        hi statusline guibg=peru
    elseif a:mode == 'r'
        hi statusline guibg=blue
    else
        hi statusline guibg=black
    endif
endfunction

au InsertEnter * call InsertStatuslineColor(v:insertmode)
au InsertLeave * hi statusline guibg=orange guifg=white
hi statusline guibg=blue
